<div id="index_1">
  <div class="ui big breadcrumb" style="background:#ffffff;">
    <a class="section" href="/admin/">管理端</a>
    <i class="right chevron icon divider"></i>
    <div class="active section">文献管理</div>
  </div>
  <div class="ui divider"></div>
  <div class="ui grid">
    <div class="two wide column">
      <div class="ui form">
        <div class="field">
          <select v-model="type" v-on:change="onchange()">
            <option value="1">国内文献</option>
            <option value="2">国外文献</option>
          </select>
        </div>
      </div>
    </div>
    <div class="four wide column">
      <div class="ui icon input">
        <input type="text" placeholder="输入任意内容搜索..." v-model="search">
        <i class="inverted circular search link icon" v-on:click="onchange()"></i>
      </div>
    </div>
    <div class="two wide column">
      <button v-if="addpage === false" class="ui button" v-on:click="addPage()">新建</button>
      <button v-else class="ui button" v-on:click="addPage('')">返回</button>
    </div>
    <div class="two wide column">
      <%= if(@search != "")do %>
        <a class="ui blue label"> {{search}} <i class="delete icon" v-on:click="clearSearch()"></i> </a>
      <% end %>
    </div>
    <div class="six wide column">
    </div>
  </div>
  <table class="ui table" v-if="addpage === false">
    <thead>
      <tr class="center aligned">
        <th class = "one wide">序号</th>
        <th class = "one wide">文献名称</th>
        <th class = "one wide">作者</th>
        <th class = "one wide">摘自</th>
        <th class = "one wide">类型</th>
        <th class = "one wide">操作</th>
      </tr>
    </thead>
    <tbody>
        <tr v-for="(book, index) in books">
          <td class = "center aligned">{{book.num}}</td>
          <td class = "center aligned">{{book.name}}</td>
          <td class = "center aligned">{{book.author}}</td>
          <td class = "center aligned">{{book.from}}</td>
          <td class = "center aligned">{{book.type}}</td>
          <td class = "center aligned">
            <button class="ui red button" v-on:click="del(book.id)">删除</button>
            <button class="ui green button" v-on:click="addPage(index)">修改</button>
          </td>
        </tr>
    </tbody>
  </table>
  <div class="ui right floated pagination menu" v-if="addpage === false">
      <a v-for="p in pages" v-bind:class="{'disabled item': p.page == page, 'item': p.page !== page}"
        v-bind:href="generateUrl(p.page)">{{p.num}}</a>
  </div>
  <div class="ui message segment" v-else>
    <div class="ui grid">
      <div class="one wide column"></div>
      <div class="fourteen wide column">
        <div class="ui disabled labeled input">
          <div class="ui label">序&nbsp;&nbsp;&nbsp;&nbsp;号</div>
          <input type="text" v-model="book.num">
        </div><br/><br/>
        <div class="ui labeled input">
          <div class="ui label">文献名</div>
          <input type="text" v-model="book.name">
        </div><br/><br/>
        <div class="ui labeled input">
          <div class="ui label">作&nbsp;&nbsp;&nbsp;&nbsp;者</div>
          <input type="text" v-model="book.author">
        </div><br/><br/>
        <div class="ui labeled input">
          <div class="ui label">摘&nbsp;&nbsp;&nbsp;&nbsp;自</div>
          <input type="text" v-model="book.from">
        </div><br/><br/>
        <div class="ui labeled input">
          <div class="ui label">类&nbsp;&nbsp;&nbsp;&nbsp;型</div>
          &nbsp;&nbsp;
          <select v-model="book.type">
            <option value="国内">国内文献</option>
            <option value="国外">国外文献</option>
          </select>
        </div><br/><br/>
        <button class="ui blue button" v-on:click="submit()">确定</button>
      </div>
      <div class="one wide column"></div>
    </div>
  </div>
</div>
<script>
$(document).ready(function() {
  Vue.prototype.$ajax = $.ajax;
  common = new Vue({
    el: '#index_1',
    data: {
      books: [],
      id: null,
      book: {num: 1, name: '', author: '', from: '', type: '国内'},
      page: 1,
      pages: [],
      type: '<%=@type%>',
      search: '<%=@search%>',
      addpage: false
    },
    created: function () {
      this.getBooks()
    },
    methods: {
      addPage: function (index) {
        if (index !== '') {
          this.book = this.books[index]
          this.id = this.book.id
        } else {
          this.id = null
        }
        if (this.addpage) {
          this.addpage = false
        } else {
          this.addpage = true
        }
      },
      clearSearch: function () {
        const url = `/admin/book?page=<%=@page%>&type=${this.type}&search=`
        window.location.href = url
      },
      onchange: function () {
        const url = `/admin/book?page=<%=@page%>&type=${this.type}&search=${this.search}`
        window.location.href = url
      },
      getBooks: function () {
        let type = this.type
        if (type === '1') {
          type = '国内'
        } else {
          type = '国外'
        }
        $.ajax({
          type: "get",
          url: `/api/book?book_type=${type}&search=${this.search}&page=<%=@page%>&limit=7`,
          async: false,
          success: (res) => {
            this.books = res.data
            this.pages = res.page_list
            this.page = res.page
            this.book.num = res.num
          },
          dataType: 'json'
        });
      },
      submit: function() {
        if (this.book.name !== '' && this.book.author !== '' && this.book.from !== '') {
          let url = ''
          if (this.id === null) {
            $.ajax({
              type: "post",
              url: `/api/book`,
              data: { book: this.book },
              async: false,
              success: (res) => {
                if( res.data !== {} ) {
                  alert('新建成功')
                  const url = `/admin/book?page=<%=@page%>&type=${this.type}&search=${this.search}`
                  window.location.href = url
                }
              },
              dataType: 'json'
            });
          } else {
            $.ajax({
              type: "put",
              url: `/api/book/${this.id}`,
              data: { book: this.book },
              async: false,
              success: (res) => {
                if( res.data !== {} ) {
                  alert('更新成功')
                  const url = `/admin/book?page=<%=@page%>&type=${this.type}&search=${this.search}`
                  window.location.href = url
                }
              },
              dataType: 'json'
            });
          }
        } else {
          alert('请填写完整')
        }
      },
      del: function(id) {
        $.ajax({
          type: "delete",
          url: `/api/book/${id}`,
          async: false,
          success: (res) => {
            alert('删除成功')
            const url = `/admin/book?page=1&type=${this.type}&search=${this.search}`
            window.location.href = url
          },
          dataType: 'json'
        });
      },
      generateUrl: function(num) {
        const url = `/admin/book?page=${num}`
        return url
      },
    }
  })
})
</script>
